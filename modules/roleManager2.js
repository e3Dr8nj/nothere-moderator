//________________________________________INITIATION_PART__________________________________________
//_____________SETTINGS
exports.active=true;//this module activate (deactivate module and all events,commands,boot in it if value is false)
exports.events=false;// {} - activate/false - deactive
exports.commands={};// {} - activate/false -deactive
exports.boots=false;// {} - activate/false -deactive
//exports.m=require('./this_project_main.js'); //inculde this project`s main file if present (same directory)
//____________DICTIONARY//dictionary set, elements by accesed by module.exports.d.some_phase[client.lang] 

const aliase ={
  '–∞–¥–µ–ø—Ç—ã —Ö–∞–æ—Å–∞':{name:'–∞–¥–µ–ø—Ç—ã —Ö–∞–æ—Å–∞',add:true,remove:true}
  ,'–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–æ–ª—å':{name:'–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–æ–ª—å',add:false,remove:true}
  ,'—Å—Ç—Ä–∞–Ω–Ω–∏–∫–∏':{name:'—Å—Ç—Ä–∞–Ω–Ω–∏–∫–∏', add:true,remove:true}
  ,'–ª–∞–º–ø–æ—á–∫–∞':{name:'üí°',add:true, remove:true}
  ,'–∑–≤–µ–∑–¥–æ—á–∫–∞':{name:'‚ú¥',add:true, remove:true}
  ,'–∫—Ç–æ –≤—Å–µ —ç—Ç–∏ –ª—é–¥–∏':{name:'–∫—Ç–æ –≤—Å–µ —ç—Ç–∏ –ª—é–¥–∏',add:true,remove:true}
  ,'–º–æ–¥–µ—Ä–∞—Ç–æ—Ä':{name:'–º–æ–¥–µ—Ä–∞—Ç–æ—Ä',add:false,remove:true}
  ,'—Å—É–º–µ—Ä–µ—á–Ω—ã–µ':{name:'—Å—É–º–µ—Ä–µ—á–Ω—ã–µ',add:false,remove:true}

  
};

exports.d={
      some_phase:['on_lang0','on_lang1']
};//d end
//___________ENVORIMENTAL//envorimental set, elements accesed by module.exports.e.some_envorimental
exports.e={
     some_envorimental:'value'  
     ,sm_role_name:'–°—É–ø–µ—Ä–º–æ–¥–µ—Ä–∞—Ç–æ—Ä'
     ,ch_log_name:'–ª–æ–≥-–º–æ–¥'
};//e end
//_________________________________________INITIATION_PART_END___________________________________________
let total_log='';
//_________________________________________EVENTS_PART_________________________________________________
module.exports.events.someEvent={ on:true,  run:async(client,event_parametrs)=>{try{
//if on this function triggers on deffined event
              

}catch(err){console.log(err);};}};//

//___________________________________________EVENTS_PART_END__________________________________________
//_________________________________________COMMANDS_PART_________________________________________________
//__________c-1
module.exports.commands.roleHelp={ on:true, aliase:'—Ä–æ–ª—å—Ö–µ–ª–ø', run:async(client,message,args)=>{try{
//if on this function triggers on deffined command
              let isAble=await module.exports.isAble(client,message);
              if(!isAble) return false;
              let px=client.prefix;
              let str='';//—Ä–æ–ª—å @nick1 +—Ä–æ–ª—å, -—Ä–æ–ª—å2, -—Ä–æ–ª—å3
              str+='['+px+'—Ä–æ–ª—å @nick1 +—Ä–æ–ª—å1,-—Ä–æ–ª—å2,-—Ä–æ–ª—å3]\n';
              str+='['+px+'—Ä–æ–ª—å @nick1 @nick2 +—Ä–æ–ª—å1,+—Ä–æ–ª—å2,-—Ä–æ–ª—å3]\n*+–≤—ã–¥–∞—Ç—å —Ä–æ–ª—å -—Å–Ω—è—Ç—å —Ä–æ–ª—å \n';
             // str+='['+px+'–ø–æ–º–µ–Ω—è—Ç—å <@nick> <—Ä–æ–ª—å1>,<—Ä–æ–ª—å2>]- –ø–æ–º–µ–Ω—è—Ç—å —Ä–æ–ª–∏ \n';
           
              str+='  +/-–ê–¥–µ–ø—Ç—ã –•–∞–æ—Å–∞\n  +/-–ö—Ç–æ –≤—Å–µ —ç—Ç–∏ –ª—é–¥–∏\n  +/-–°—Ç—Ä–∞–Ω–Ω–∏–∫–∏\n  -–í—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–æ–ª—å\n  +/-–õ–∞–º–ø–æ—á–∫–∞\n  +/-–ó–≤–µ–∑–¥–æ—á–∫–∞\n';
              str+='  -–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä\n  -–°—É–º–µ—Ä–µ—á–Ω—ã–µ\n';
            //  str+='['+px+'—Ä–æ–ª—å–ü–æ–∑–∏—Ü–∏—è <–Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏>]-\n';
            // str+='['+px+'—Ä–æ–ª—å–ü–æ–º–µ–Ω—è—Ç—å–ü–æ–∑–∏—Ü–∏—é <–Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏>,<–ø–æ–∑–∏—Ü–∏—è>]-–ø–æ–º–µ–Ω—è—Ç—å –ø–æ–∑–∏—Ü–∏—é —Ä–æ–ª–∏\n';
            // str+='['+px+'—Ä–æ–ª—å–î–∞—Ç—å <—É–ø–æ–º–∏–Ω–∞–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤>,<–Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é>]-–≤—ã–¥–∞—Ç—å —Ä–æ–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º\n';
            //  str+='['+px+'—Ä–æ–ª—å–£–¥–∞–ª–∏—Ç—å <–Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏>]-—É–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å\n';
             message.channel.send(str,{code:'ini'});
}catch(err){console.log(err);};}};//
//_______c0
/*
module.exports.commands.giveRole={ on:false, aliase:'–≤—ã–¥–∞—Ç—å', run:async(client,message,args)=>{try{
//if on this function triggers on deffined command
           let isAble=await module.exports.isAble(client,message);
           if(!isAble) return false;
           if(!message.mentions.members.first()){message.channel.send('–∫–æ–º—É —Ä–æ–ª—å –≤—ã–¥–∞—Ç—å?–º–ª—è'); return;};
            let mmbs = message.mentions.members.keyArray();
            let msg_cnt =message.content.split('>');
            let role_names = msg_cnt[msg_cnt.length-1].trim().split(',');
            console.log(role_names);
            for(let i=0;i<role_names.length;i++){ console.log(role_names[i]);
             
                    for(let ii=0;ii<mmbs.length;ii++){
                        try{
                            let mmb= await message.member.guild.fetchMember(mmbs[ii]).catch(err=>console.log(err));
                            console.log(mmb.user.username);
                            let r_n = (role_names[i].startsWith(' '))?role_names[i].slice(1):role_names[i];
                            await module.exports.giveRole(client,message,mmb,r_n);
                         }catch(err){console.log(err);};
                    };//for ii end
             
            };//for end
           // message.channel.send('–æ–∫');
            return;
}catch(err){console.log(err);};}};//
*/
//_______c2
/*
module.exports.commands.removeRole={ on:false, aliase:'—Å–Ω—è—Ç—å', run:async(client,message,args)=>{try{
//if on this function triggers on deffined command
           let isAble=await module.exports.isAble(client,message);
           if(!isAble) return false;
           if(!message.mentions.members.first()){
             message.channel.send('—É –∫–æ–≥–æ —Ä–æ–ª–∏ —Å–Ω–∏–º–∞—Ç—å?–º–ª—è'); 
            return;};
            let mmbs = message.mentions.members.keyArray();
            let msg_cnt =message.content.split('>');
            let role_names = msg_cnt[msg_cnt.length-1].trim().split(',');
            console.log(role_names);
            for(let i=0;i<role_names.length;i++){ console.log(role_names[i]);
             
                    for(let ii=0;ii<mmbs.length;ii++){
                        try{
                            let mmb= await message.member.guild.fetchMember(mmbs[ii]).catch(err=>console.log(err));
                            console.log(mmb.user.username);
                            let r_n = (role_names[i].startsWith(' '))?role_names[i].slice(1):role_names[i];
                            await module.exports.removeRole(client,message,mmb,r_n);
                         }catch(err){console.log(err);};
                    };//for ii end
             
            };//for end
            //message.channel.send('—Ä–æ–ª–∏ —Å–Ω—è—Ç—ã –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã (–Ω–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ)');
           
            return;
}catch(err){console.log(err);};}};//
*/
//_______c3
module.exports.commands.manipuleRole={ on:true, aliase:'—Ä–æ–ª—å', run:async(client,message,args)=>{try{
//if on this function triggers on deffined command
           let isAble=await module.exports.isAble(client,message);
           if(!isAble) return false;
           if(!message.mentions.members.first()){
             //message.channel.send('–ª–∞–ª–∫–∞');
             return;};
            let mmbs = message.mentions.members.keyArray();
            let msg_cnt =message.content.split('>');
            let role_names = msg_cnt[msg_cnt.length-1].trim().split(',');
            console.log(role_names);
            for(let i=0;i<role_names.length;i++){ console.log(role_names[i]);
             
                    for(let ii=0;ii<mmbs.length;ii++){
                        try{
                            let mmb= await message.member.guild.fetchMember(mmbs[ii]).catch(err=>console.log(err));
                            console.log(mmb.user.username);
                            let r_n = (role_names[i].startsWith(' '))?role_names[i].slice(1):role_names[i];
                            if(r_n.startsWith('-')){
                                r_n=r_n.slice(1); 
                                r_n = (r_n.startsWith(' '))?r_n.slice(1):r_n;
                                await module.exports.removeRole(client,message,mmb,r_n); 
                            }else if(r_n.startsWith('+')){
                                r_n=r_n.slice(1); 
                                r_n = (r_n.startsWith(' '))?r_n.slice(1):r_n;
                                await module.exports.giveRole(client,message,mmb,r_n); 
                            }else{
                                r_n=r_n.slice(1);
                                r_n = (r_n.startsWith(' '))?r_n.slice(1):r_n;
                                await module.exports.giveRole(client,message,mmb,r_n); 
                            };
                         }catch(err){console.log(err);};
                    };//for ii end
             
            };//for end
           // message.channel.send('–æ–∫');
             module.exports.log(client,message,{description:total_log,color:'blue'},true);
             total_log='';
             return;
}catch(err){console.log(err);};}};//

//_______c

//___________________________________________COMMANDS_PART_END___________________________________________
//_________________________________________BOOTS_PART___________________________________________________
module.exports.boots.someBoot={ on:true,  run:async(client)=>{try{
//if on this function triggers on ready event (with some delay)
           

}catch(err){console.log(err);};}};//

//___________________________________________BOOTS_PART_END______________________________________________
//______________________________SUB__FUNCTIONS
//_______SF0

//_______SF1
exports.giveRole=async(client,message,mmb,role_name)=>{
try{ 
   role_name=role_name.toLowerCase();
   if(!aliase[role_name]||aliase[role_name].add===false) {
        message.channel.send(role_name+' - —Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω–∞, –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–π –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏. \\'+client.prefix+'—Ä–æ–ª—å—Ö–µ–ª–ø');
        return;
   };
   role_name=aliase[role_name].name;
   let role_=await message.guild.roles.find(r=>r.name.toLowerCase()==role_name);
   if(!role_){message.channel.send(role_name+' —Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ '+role_name); return;};
   if(mmb.roles.get(role_.id)) {return;};
   await mmb.addRole(role_); 
   message.channel.send(role_.name+' —Ä–æ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ '+mmb.user.username);
   //await module.exports.log(client,message, {name:'–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏', description:' –≤—ã–¥–∞–ª —Ä–æ–ª—å  `'+role_.name+'`  '+mmb+' '+mmb.user.username+mmb.user.discriminator,color:'blue'});
  total_log+=message.member+' –≤—ã–¥–∞–ª —Ä–æ–ª—å  `'+role_.name+'` '+mmb+' '+mmb.user.username+mmb.user.discriminator+'\n';
  return;
}catch(err){console.log(err);};
};//createRole end
//_______SF2
exports.removeRole=async(client,message,mmb,role_name)=>{
try{ 
   role_name=role_name.toLowerCase();
   if(!aliase[role_name]||aliase[role_name].remove===false) {message.channel.send(role_name+' —Ä–æ–ª—å –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–π –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'); return;};
   role_name=aliase[role_name].name;
   let role_=await message.guild.roles.find(r=>r.name.toLowerCase()==role_name);
   if(!role_){message.channel.send(role_name+' —Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ '); return;};
   if(!mmb.roles.get(role_.id)) {return;};
    await mmb.removeRole(role_); message.channel.send(role_.name+' —Ä–æ–ª—å —Å–Ω—è—Ç–∞ c '+mmb.user.username);
    //await module.exports.log(client,message, {name:'–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏', description:' —Å–Ω—è–ª —Ä–æ–ª—å  `'+role_.name+'` —Å '+mmb+' '+mmb.user.username+mmb.user.discriminator,color:'blue'});
   total_log+=message.member+' —Å–Ω—è–ª —Ä–æ–ª—å  `'+role_.name+'` —Å '+mmb+' '+mmb.user.username+mmb.user.discriminator+'\n';
    return;
}catch(err){console.log(err);};
};//createRole end
//_______SF3
exports.isAble=async(client,message)=>{
try{ 
   //return true;
   if(message.member.user.id==message.guild.owner.id) return true;
   let role_=await message.guild.roles.find(r=>r.name==module.exports.e.sm_role_name);
   if(!role_){message.channel.send('—Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ '+module.exports.e.sm_role_name); return false;};
   if(message.member.roles.find(r=>r.name==module.exports.e.sm_role_name)){return true;};
    message.channel.send(message.member+' –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤');
    return false;
}catch(err){console.log(err);};
};//createRole end
//_______SF4
exports.log=async(client,message,action)=>{
try{ 
   let colors={blue:0x3366ff};
   action.name=(action.name)?action.name:'–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏';
   let log_mod=await message.guild.channels.find(r=>r.name==module.exports.e.ch_log_name);
   if(!log_mod){console.log('log channel not found'); return;};
  // log_mod.send(message.member+action+"`"+role_name+"`  "+mmb);
  //let str = (all)?message.member+'\n':message.member;
   let emb={fields:[{name:action.name,value:action.description}],timestamp: new Date(),color:colors[action.color]};
   log_mod.send({embed:emb});
}catch(err){console.log(err);};
};//createRole end



